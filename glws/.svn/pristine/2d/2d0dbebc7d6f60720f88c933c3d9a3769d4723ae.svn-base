<!DOCTYPE html>
<html lang="zh" xmlns:th="http://www.thymeleaf.org" xmlns:shiro="http://www.pollix.at/thymeleaf/shiro">
<head>
	<th:block th:include="include :: header('遥感数据列表')"/>
</head>
<body class="gray-bg" onload="onLoad()">
<div class="row">
	<div class="col-sm-12">
		<div class="tab-content" style="width: 100%;height: 100%;">
			<div id="tab-1" class="tab-pane active">

				<div class="panel-body">
					<div id="map" style="width:100%; height:400px;">
					</div>


								<form id="dept-form">

									<input type="hidden" name="cityName" id="cityName"/>

								</form>
							<div class="col-sm-12 select-table table-striped">
								<table id="slsj"></table>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
</div>

<div class="modal inmodal" id="myModal" align="center" tabindex="-1" role="dialog" aria-hidden="true">
	<img id="img" name="img">
</div>
<th:block th:include="include :: footer"/>
<script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=3defde9e465f739e73513ce9e8595fe3"></script>
<script th:inline="javascript">
    var weatherStationPrefix = ctx + "extinterface/weatherStation";
 

    function imgShow(id) {
        $.ajax({
            type: "post",
            url: weatherStationPrefix + "/detail",
            data: {
                "id": id
            },
            success: function (msg) {
                if (msg.imgUrl != null && msg.imgUrl != "") {
                    $('#img').attr("src", msg.imgUrl);
                } else {
                    alert("图片无效");
                }
            }
        });
    }
    function downLoad(id) {
        window.location.href = weatherStationPrefix + "/download/"+id;
    }
    function audit(id) {
        $.modal.confirm("确定审核通过吗？", function() {
            $.operate.post(weatherStationPrefix + "/audit", {"id": id });
        })
    }
    function auditAll() {
        var ids=$("#remotesensing-table").bootstrapTable("getAllSelections")
        if (ids.length == 0) {
            $.modal.alertWarning("请至少选择一条记录");
            return;
        }
        $.modal.confirm("确定要审核通过" + ids.length + "条数据吗?", function() {
            var data="0";
            for(var i=0;i<ids.length;i++){
                data+=","+ids[i].id
            }
            $.operate.post(weatherStationPrefix + "/auditAll",{"ids":data});
        });
    }
    function unaudit(id) {
        $.modal.confirm("确定取消审核吗？", function() {
            $.operate.post(weatherStationPrefix + "/unaudit", {"id": id });
        })
    }
    function auditshp(id) {
        $.modal.confirm("确定审核通过吗？", function() {
            $.operate.post(aaaa + "/auditShp", {"id": id });
        })
    }
    function unauditshp(id) {
        $.modal.confirm("确定取消审核吗？", function() {
            $.operate.post(aaaa + "/unauditShp", {"id": id });
        })
    }
    function auditAllshp() {
        var ids=$("#slsj").bootstrapTable("getAllSelections")
        if (ids.length == 0) {
            $.modal.alertWarning("请至少选择一条记录");
            return;
        }
        $.modal.confirm("确定要审核通过" + ids.length + "条数据吗?", function() {
            var data="0";
            for(var i=0;i<ids.length;i++){
                data+=","+ids[i].shpFileId
            }
            $.operate.post(aaaa + "/auditAllShp",{"ids":data});
        });
    }

    function gisRemove() {
        if (vectorDrawing != null) {
            map.removeLayer(vectorDrawing);
        }
    }
    function show(url){
        if (vectorDrawing != null) {
            map.removeLayer(vectorDrawing);
        }
        $.post(remotesensingPrefix+"/gisShow",{url:url},
            function(res) {
                gisShow(res);
            }
        )
    }
    function gisShow(data) {

        var datashp=[];
        for(var i=0;i<data.length;i++){
            var dataShpArray=[];
            var dataWipeOffArray=[];
            var dataList=data[i];
            if(dataList.shpList!=null){
                var dataShpValue=dataList.shpList[0];
                for(var n=0;n<dataShpValue.length;n++){
                    var array=[];
                    var datas=  dataShpValue[n] .split(" ");
                    array.push(datas[0].substring(0,8),datas[1].substring(0,8));
                    dataShpArray.push(array);
                }
                if(dataShpArray.length>0){
                    datashp.push(dataShpArray);
                }
            }
            if(dataList.wipeOffList!='[]' && dataList.wipeOffList!=''){
                var dataShpwipeOffValue=dataList.wipeOffList[0];
                for(var n=0;n>dataShpwipeOffValue.length;n++){
                    var array=[];
                    var datas=  dataShpwipeOffValue[n] .split(" ");
                    array.push(datas[0].substring(0,8),datas[1].substring(0,8));
                    dataShpArray.push(array);
                }
                if(dataWipeOffArray.length>0){
                    datashp.push(dataWipeOffArray);
                }
            }
        }
        console.log(datashp)
        var polygon = new ol.Feature({
            geometry: new ol.geom.Polygon(datashp)
        });
        polygon.setStyle(new ol.style.Style({
            //填充色
            fill: new ol.style.Fill({
                color: 'rgba(255, 255, 255, 0.5)'
            }),
            //边线颜色
            stroke: new ol.style.Stroke({
                color: 'red',
                width: 2
            }),
            //形状
            image: new ol.style.Circle({
                radius: 1,
                fill: new ol.style.Fill({
                    color: 'red'
                })
            })
        }));
        //实例化一个矢量图层Vector作为绘制层
        var source = new ol.source.Vector({
            features: [polygon]
        });
        //创建一个图层
        vectorDrawing = new ol.layer.Vector({
            source: source
        });
        //将绘制层添加到地图容器中
        map.addLayer(vectorDrawing);
    }

    var map,vectorDrawing;
    function onLoad() {
        load();
        var tiled = new ol.layer.Tile({
            source: new ol.source.TileWMS({
                url: gisUrl + urlLayer,
                params: {
                    FORMAT: 'image/png',
                    VERSION: '1.1.1',
                    tiled: true,
                    exceptions: 'application/vnd.ogc.se_inimage',
                    LAYERS: 'gis:Export_Output'
                }
            })
        });
        map.addLayer(tiled);
        map.on('click', function (evt) {
			$.get(weatherStationPrefix+"/getAddress?lonLat="+evt.coordinate,function (res) {
                $("#cityName").val(res);
                $.table.search('dept-form','slsj');

			})
		})
    }
    $(function () {
        var aaaoptions = {
            id: "slsj",
            toolbar: "shptoolbar",
            url: weatherStationPrefix+"/getTodayWeather/?cityName=北京",
            modalName: "shp文件",
            pageSize:5,
            pageList:[5,10,20,50,100],//分页步进值
            showSearch: false,
            showToggle: false,
            showColumns: false,
            showRefresh: false,
            columns: [{
                checkbox: true,
                formatter:  function (value, row, index) {
                    if (row.status == '1'){
                        return {
                            disabled : true//设置是否可用
                        };
                    }
                }
            },
                {
                    field: 'index',
                    title: 'ID',
                    formatter: function (value, row, index) {
                        return index + 1;
                    }
                },
                // {
                //     field:'shpFileId',
                //     title:"ID",
                //     visible: false
                // },
                {
                    field: 'city',
                    title: '城市名称'
                },
                {
                    field: 'weather',
                    title: '天气'
                },
                {
                    field: 'temp2',
                    title: '最高温度',
                    // visible:false
                },
                {
                    field: 'temp1',
                    title: '最低温度',
                }

            ]
        };
        $.table.init(aaaoptions);

    });

    function load() {
        var source_vec = new ol.source.XYZ({
            url: "http://t3.tianditu.com/DataServer?T=vec_w&x={x}&y={y}&l={z}&tk=3defde9e465f739e73513ce9e8595fe3",//parent.TiandituKey()为天地图密钥
            wrapX: false
        });
        var TiandiMap_vec = new ol.layer.Tile({
            title: "天地图矢量图层",
            source: source_vec
        });
        var source_cva = new ol.source.XYZ({
            url: "http://t3.tianditu.com/DataServer?T=cva_w&x={x}&y={y}&l={z}&v=4.0&tk=3defde9e465f739e73513ce9e8595fe3",//parent.TiandituKey()为天地图密钥
            wrapX: false
        });
        var TiandiMap_cva = new ol.layer.Tile({
            title: "天地图矢量注记图层",
            source: source_cva

        })
        //实例化鼠标位置控件
        var mousePositionControl = new ol.control.MousePosition({
            //坐标格式
            coordinateFormat: ol.coordinate.createStringXY(4),
            //地图投影坐标系（若未设置则输出为默认投影坐标系下的坐标）
            projection: 'EPSG:4326',
            //坐标信息显示样式，默认是'ol-mouse-position'
            className: 'custom-mouse-position',
            //显示鼠标位置信息的目标容器
            target: document.getElementById('mouse-position'),
            //未定义坐标的标记
            undefinedHTML: '&nbsp;'
        });
        //实例化Map对象加载地图
        map = new ol.Map({
            //地图容器div的ID
            target: 'map',
            //地图容器中加载的图层
            layers: [TiandiMap_vec, TiandiMap_cva],
            //地图视图设置
            view: new ol.View({
                //地图初始中心点
                center: [105, 35],
                projection: "EPSG:4326",
                //地图初始显示级别
                zoom: 4,
                minZoom: 4,
                maxZoom: 18,
            }),
            //加载控件到地图容器中
            controls: ol.control.defaults({}).extend([mousePositionControl]) //加载鼠标位置控件
        });
        map.on('click', function (event) {
            map.forEachFeatureAtPixel(event.pixel, function (feature) {
                // 为移动到的feature发送自定义的mousemove消息
                feature.dispatchEvent({type: 'click', event: event});
            });
        });
    }


</script>

</body>
<style type="text/css">
	#map {
		height: 50%;
		width: 100%;
	}
	#gisRemove{
		float: right;
		position: absolute;
		bottom: 52%;
		right: 50%;
		z-index: 2000;
	}
</style>
</html>