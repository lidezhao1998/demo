<!DOCTYPE html>
<html lang="zh" xmlns:th="http://www.thymeleaf.org" xmlns:shiro="http://www.pollix.at/thymeleaf/shiro">
<head>
    <th:block th:include="include :: layout-latest-css"/>
    <th:block th:include="include :: ztree-css"/>
    <th:block th:include="include :: header('地图')"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－海量密集点</title>
    <script src=" http://api.tianditu.gov.cn/api?v=4.0&tk=3defde9e465f739e73513ce9e8595fe3"
            type="text/javascript"></script>
    <script src="http://lbs.tianditu.gov.cn/api/js4.0/opensource/data/points-sample-data.js"></script>
    <style type="text/css">body, html {
        width: 100%;
        height: 100%;
        margin: 0;
        font-family: "Microsoft YaHei"
    }

    #mapDiv {
        width: 100%;
        height: 400px
    }

    input, b, p {
        margin-left: 5px;
        font-size: 14px
    }</style>
    <style type="text/css">
        body, html {
            width: 100%;
            height: 100%;
            margin: 0;
            font-family: "微软雅黑";
        }

        #mapDiv {
            height: 90%;
            width: 100%;
        }

        p, input {
            margin-top: 10px;
            margin-left: 5px;
            font-size: 14px;
        }
    </style>
    <th:block th:include="include :: footer"/>
    <script th:inline="javascript">
        var prefix = ctx + "analyze/gis";
        var prefixGisMap = ctx + "analyze/gis";
        var map, zoom = 12, handler;
        var points = [];//斑点信息
        var spotinfos = "";//坐标点
        var spotid = "";//要保存的斑点id
        var result = [[${gisMap}]];
        var lngLat = [[${lngLat}]];

        function onLoad() {
            map = new T.Map('mapDiv');
            if(lngLat==null || lngLat==''){
                map.centerAndZoom(new T.LngLat(116.40969, 39.94940), zoom);
            }else{
                var splitLngLat =lngLat.split(",");
                map.centerAndZoom(new T.LngLat(splitLngLat[0],splitLngLat[1]), zoom);
            }
            //创建对象
            var ctrl = new T.Control.MapType();
            //添加控件
            map.addControl(ctrl);
            //创建右键菜单对象
            var menu = new T.ContextMenu({width: 140});
            var config = {
                showLabel: true,
                color: "red", weight: 3, opacity: 0.5, fillColor: "#FFFFFF", fillOpacity: 0.5
            };
            //创建比例尺控件对象
            var scale = new T.Control.Scale();
            //添加比例尺控件
            map.addControl(scale);
            //创建标注工具对象
            polygonTool = new T.PolygonTool(map, config);
            lineTool = new T.PolylineTool(map, config);
            map.disableDoubleClickZoom();//禁用双击放大
            map.setMapType(TMAP_HYBRID_MAP);//默认卫星混合图
            //添加右键菜单
            var txtMenuItem = [
                {
                    text: '测距',
                    callback: function () {
                        lineTool.open();
                    }
                },
                {
                    text: '测面',
                    callback: function () {
                        polygonTool.open();
                    }
                },
                {
                    text: '绘图',
                    callback: function () {
                        openPolygonTool();
                    }
                }
                ,                {
                    text: '标点',
                    callback: function () {
                        if (handler) handler.close();
                        handler = new T.MarkTool(map, {follow: true});
                        handler.open();
                        map.addEventListener("mouseup", mouseupPoint);
                    }
                },
                {
                    text: '清除图层',
                    callback: function () {
                        map.clearOverLays();
                    }
                },
                {
                    text: '获取此坐标',
                    isDisable: false,
                    callback: function (lnglat) {
                        layer.msg("经度:" + lnglat.getLng() + ", 纬度: " + lnglat.getLat(), {icon: 6, time: 2000});
                    }
                }
            ];
            for (var i = 0; i < txtMenuItem.length; i++) {
                //添加菜单项
                var item = new T.MenuItem(txtMenuItem[i].text, txtMenuItem[i].callback);
                //item.disable();
                menu.addItem(item);
                if (i == 1 || i == 3) {
                    //添加分割线
                    menu.addSeparator();
                }
            }
            map.addContextMenu(menu);
            map.enableInertia();//惯性移动
            //创建标注工具对象
            polygonTool = new T.PolygonTool(map, config);
            spotInfo();
        }

        //绘图
        function openPolygonTool() {
            if (handler) handler.close();
            handler = new T.PolygonTool(map);
            handler.open();
            map.addEventListener("click", MapClick);
            handler.addEventListener("draw",function () {
                addGisMap(0,2,spotinfos);
            });
        }
        //把绘图的坐标保存到页面
        function MapClick(e) {
            $("#spotinfos").attr("value", e.lnglat.getLng() + "," + e.lnglat.getLat());
            spotinfos = spotinfos + $("#spotinfos").val() + ";";
        }

        function mouseupPoint(e) {
            $("#spotinfos").attr("value", e.lnglat.getLng() + "," + e.lnglat.getLat());
            spotinfos = $("#spotinfos").val();
            addGisMap(0,1,spotinfos);
            map.removeEventListener("mouseup", mouseupPoint);
        }
        function addGisMap(id,type,coordinates) {
            map.removeEventListener("dblclick", addGisMap);
            $.modal.open("添加Gis信息", prefixGisMap+"/addGisMap?id="+id+"&type="+type+"&coordinates="+coordinates, 500, 495);
        }
        //查询坐标向页面进行绘图
        function spotInfo()     {
            console.log(result)
            if(result!=null){
                var type =result.type;
                var color =result.color;
                if(color == null || color == '')
                    color='red';
                var id =result.id;
                var content =  "<div>标题: "+result.name+"  <br>详情: "+result.remark+"" +
                    "</div>";
                if(type==1){
                    type1(result.coordinates,content);
                }
                else if(type==2){
                    type2(result.coordinates,color,content,id);
                }
            }
        }

        function type1(data,content) {
            var splitCoord= data.split(",");
            var marker = new T.Marker(new T.LngLat(splitCoord[0],splitCoord[1]));
            map.addOverLay(marker);               // 将标注添加到地图中
            addClickHandler(content,marker);
        }
        function type2(data,color,content,id) {
            var pointss = [];
            var coordinates= data.split(";");
            for (var j = 0; j < coordinates.length-1; j++) {
                var zbs = coordinates[j].split(",");
                pointss.push(new T.LngLat(zbs[0], zbs[1]));
            }
            polygon = new T.Polygon(pointss,{
                color: color, weight: 2, opacity: 0.3, fillColor: color, fillOpacity: 0.3
            });
            polygon.addEventListener("mouseover", function () {
                layer.msg("此区域为 : " + content, {icon: 6, time: 1000});
            });
            polygon.addEventListener("dblclick",
                function (e) {
                    overlay_style(e, id)
                }
            );
            //向地图上添加面
            map.addOverLay(polygon);
        }
        function addClickHandler(content,marker){
            marker.addEventListener("click",function(e){
                openInfo(content,e)}
            );
        }
        function openInfo(content,e){
            var point = e.lnglat;
            marker = new T.Marker(point);// 创建标注
            var markerInfoWin = new T.InfoWindow(content,{offset:new T.Point(0,-30)}); // 创建信息窗口对象
            map.openInfoWindow(markerInfoWin,point); //开启信息窗口
        }
        //监听双击事件进行绘图编辑
        function overlay_style(e, spoid) {
            var spotinfos = "";
            var p = e.target;
            if (p instanceof T.Polygon) {
                if (p.isEditable()) {
                    p.disableEdit()
                    var a = p.getLngLats();
                    for (var i = 0; i < a.length; i++) {
                        var aa = a[i];
                        for (var j = 0; j < aa.length; j++) {
                            spotinfos = spotinfos + aa[j].lng + "," + aa[j].lat + ";";
                        }
                    }
                    updateSpot(spoid, spotinfos);
                } else {
                    p.enableEdit();
                    var sid = $("#spotid").val();
                    if (sid != "") {
                        spotid = sid + spoid + ",";
                        $("#spotid").attr("value", spotid);
                    } else {
                        $("#spotid").attr("value", spoid + ",");
                    }
                }
                $("#spotinfos").attr("value", spotinfos);
            }
        }

        //根据监听双击事件更新绘图坐标
        function updateSpot(spoid, spotinfo) {
            addGisMap(spoid,2,spotinfo);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div class="ui-layout-center">
    <div class="container-div">
        <div class="row">
            <div class="col-sm-12 search-collapse">
                <input type="hidden" name="spotid" id="spotid" value=""><!---要编辑的斑点id-->
                <input type="hidden" name="spotinfos" id="spotinfos" value=""><!--保存坐标信息-->
                <form id="user-form">
                    <input type="hidden" id="deptId" name="deptId">
                    <input type="hidden" id="parentId" name="parentId">
                    <div class="select-list"></div>
                </form>
            </div>
            <div id="mapDiv"></div>
        </div>
    </div>
</div>


</body>
<th:block th:include="include :: layout-latest-js"/>
<script th:inline="javascript">
    $(function () {
        var panehHidden = false;
        if ($(this).width() < 769) {
            panehHidden = true;
        }
        $('body').layout({initClosed: panehHidden, west__size: 185});
    });
</script>
</html>
